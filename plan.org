* [TODO] Transparent use of marker data to calculate
  The user experience should be something like this
  1. Decide on the analysis to make. The available analyses you can run
     on a single trial are
    1. Angle to vertical of single segment (IMU)
    2. Range-of-motion over a gait cycle of angle to vertical
    3. Planar (sagittal plane) angle between segments
    4. Range-of-motion of said angle
    5. Horizontal and vertical (again in sagittal plane) displacement
       of a segment (origin of the IMU)
    6. Range-of-motion of said displacements
    7. Step length / Step frequency
  2. Decide on which subjects and which trials for which to run the analysis.
     These are represented by lists, i.e. subj=['S4, S5'], trials=['N','B']
  3. Run the analysis the call is something like this
     res = db.apply_to_all_trials(db.get_RoM_angle_to_vertical,
                                  {'imu':'N'},
                                  subjlist=['S2', 'S3'],
                                  triallist=['B', 'N'])
     Whatever is returned from the function is collected in a dict indexed by
                                      the tuple (subject, trial).
  4. Create summary statistics from the results returned. The function
     make_boxplot does this.
    *** [TODO] Text files generated by make_boxplot to contain subj number

*

** [TODO] Associate marker data to IMU data
   IMU data are referenced by name of IMU. Must determine association of
   marker data to IMU. Since we work with planar motion, we need two markers
   Proximal and distal. Only left side of body has markers. Marker names are
   HEAD    ELBOW   WRIST   ACR     C7      SACRUM  LPSIS
   HIP     THIGH   KNEE    ANKLE
   DECISION: Define the following proximal and distal markers for the IMUs
  - LA  (left ankle) "upper":"KNEE", "lower":"ANKLE", "closest":"ANKLE"
  - LT (left thigh) "upper":"HIP", "lower":"KNEE", "closest":"THIGH"
  - N (neck) "upper":"C7", "lower":"SACRUM", "closest":"C7"
  - LH (left hand) "upper":"ELBOW", "lower":"WRIST", "closest":"WRIST"
** [TODO] Handle non-existence of marker data for specific trial
* [TODO] Visualize comparison between results from marker data and IMU data
* [DONE] Decide: Should marker data be included in the hdf db?
  I don't think so, in order for the database not to be too big. Instead, the
  marker validation data should be a separate database. Either as a lump of
  files with a table (dictionary) to get the correct data. The module
  compare_to_mocap uses a list of triplets (subj, trial, filename). In order to
  make the use of the marker data transparent, there should be a flag that is
  used in each analysis function which is False by default (useMarkerData=False).
  If true, then in an easy way the proximal and distal marker trajectories for
  the particular IMU and for the part of the trial to analyze should be loaded,
  and a particular function be called. Or have separate functions for marker
  data that have same calling signature as for the IMU data.
  That leaves the question of comparison. This can be done on a pair of
  dictionaries as returned by apply_to_all_trials. This comparison function should
  be able to handle both results in the form of sets of single data (RoM for instance)
  and sets of timeseries (angles over gait cycle).
